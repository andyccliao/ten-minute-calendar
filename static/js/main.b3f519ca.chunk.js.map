{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["colors","red","value","textColor","name","pink","violet","purple","indigo","blue","sky","cyan","green","gold","yellow","orange","brown","black","ColorLabel","color","label","Object","classCallCheck","this","Square","nextProps","nextState","props","colorlabel","react_default","a","createElement","className","onMouseEnter","onMouseDown","onMouseUp","onContextMenu","title","style","backgroundColor","border","React","Component","Grid","i","_this","App_Square","grid","event","m","n","_this2","row","slice","key","map","index","renderSquare","tbheadrow","tbrows","push","renderRow","renderTable","ColorMenu","colorLabel","_this3","toString","onClick","_this4","_this5","makeEraseItem","colorList","cl","makeColorItem","makeColorList","addNewColor","App","_this6","possibleConstructorReturn","getPrototypeOf","call","startingColorLabel","state","Array","fill","mainColorLabel","painting","buttons","setState","button","preventDefault","_this7","App_Grid","App_ColorMenu","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b3f519ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nconst rows = 12;\r\nconst cols = 12;\r\n\r\nconst colors = {\r\n  red:    {value: \"#d32f2f\", textColor: \"white\", name: \"red\"},\r\n  pink:   {value: \"#c2185b\", textColor: \"white\", name: \"pink\"},\r\n  violet: {value: \"#7b1fa2\", textColor: \"white\", name: \"violet\"},\r\n  purple: {value: \"#512da8\", textColor: \"white\", name: \"purple\"},\r\n  indigo: {value: \"#303f9f\", textColor: \"white\", name: \"indigo\"},\r\n  blue:   {value: \"#1976d2\", textColor: \"white\", name: \"blue\"},\r\n  sky:    {value: \"#5eb8ff\", textColor: \"black\", name: \"sky\"},\r\n  cyan:   {value: \"#00acc1\", textColor: \"black\", name: \"cyan\"},\r\n  green:  {value: \"#43a047\", textColor: \"black\", name: \"green\"},\r\n  gold:   {value: \"#c0ca33\", textColor: \"black\", name: \"gold\"},\r\n  yellow: {value: \"#ffeb3b\", textColor: \"black\", name: \"yellow\"},\r\n  orange: {value: \"#fb8c00\", textColor: \"black\", name: \"orange\"},\r\n  brown:  {value: \"#6d4c41\", textColor: \"white\", name: \"brown\"},\r\n  black:  {value: \"#212121\", textColor: \"white\", name: \"black\"},\r\n};\r\n\r\nclass ColorLabel {\r\n  constructor(color, label) {\r\n    this.color = color;\r\n    this.label = label;\r\n  }\r\n\r\n  toString() {\r\n    return this.color + this.label;\r\n  }\r\n}\r\n\r\nclass Square extends React.Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(this.props.colorlabel !== nextProps.value) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <button \r\n      className=\"square\" \r\n      onMouseEnter={this.props.onMouseEnter} \r\n      onMouseDown={this.props.onMouseDown}\r\n      onMouseUp={this.props.onMouseUp}\r\n      onContextMenu={this.props.onMouseDown}\r\n      title={(this.props.colorlabel) ? this.props.colorlabel.label : \"Empty\"}\r\n      style={{\"backgroundColor\" : (this.props.colorlabel) ? this.props.colorlabel.color.value : \"white\",\r\n              \"border\" : (this.props.colorlabel) ? \"0px\" : \"1px solid #999\",}}>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Grid extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square \r\n      colorlabel={this.props.grid[i]}\r\n      onMouseEnter={(event) => this.props.onMouseEnter(i, event)}\r\n      onMouseDown={(event) => this.props.onMouseDown(i, event)}\r\n      onMouseUp={this.props.onMouseUp}\r\n    />;\r\n  }\r\n\r\n  renderRow(m, n) {\r\n    const row = this.props.grid.slice(m*n, (m+1)*n);\r\n\r\n    return (\r\n      <tr key={\"row:\"+(m)}>\r\n        <th key={\"rowh:\"+m}>{(2*m+5)%12}</th>\r\n        {row.map( \r\n          (value, index) => {\r\n            return (<td key={\"data\"+ (m*n + index)}>\r\n              {this.renderSquare(m*n + index)}\r\n            </td>)\r\n          }\r\n        )}\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderTable() {\r\n    const tbheadrow = (\r\n      <tr>\r\n        <th/><th/><th/><th/><th/><th/><th/><th>|</th><th/><th/><th/><th/><th/>\r\n      </tr>\r\n    );\r\n\r\n    let tbrows = [];\r\n    for (let i = 0; i < rows; i++) {\r\n      tbrows.push(this.renderRow(i, cols));\r\n    }\r\n\r\n    return (\r\n      <table>\r\n        <thead>{tbheadrow}</thead>\r\n        <tbody>{tbrows}</tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Grid\">\r\n        {this.renderTable()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass ColorMenu extends React.Component {\r\n  makeColorItem(colorLabel) {\r\n    return (\r\n      <li key={colorLabel.toString()}>\r\n        <button\r\n        className=\"deleteColor\"\r\n        >\r\n          X\r\n        </button>\r\n        <button \r\n        className=\"colorButton\" \r\n        style={{\"backgroundColor\" : colorLabel.color.value}}\r\n        onClick={() => this.props.onClick(colorLabel)}\r\n        >\r\n          <span style={{\"color\" : colorLabel.color.textColor}}>{colorLabel.label}</span>\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  makeEraseItem() {\r\n    return (\r\n      <button \r\n      className=\"colorButton\" \r\n      onClick={() => this.props.onClick(null)}\r\n      >\r\n        Empty (or right click)\r\n      </button>\r\n    )\r\n  }\r\n\r\n  makeColorList() {\r\n    return (\r\n      <ul className=\"colorMenuList\">\r\n        {this.makeEraseItem()}\r\n        {this.props.colorList.map((cl) => this.makeColorItem(cl))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  addNewColor() {\r\n    return (\r\n      <button className=\"newColorButton\">\r\n        Add Event\r\n      </button>\r\n    )\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"ColorMenu\">\r\n        {this.makeColorList()}\r\n        {this.addNewColor()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let startingColorLabel = new ColorLabel(colors.orange, \"Work\");\r\n    this.state = {\r\n      grid: Array(144).fill(null),\r\n      colorList: [\r\n        startingColorLabel,\r\n        new ColorLabel(colors.black,  \"Commute\"),\r\n        new ColorLabel(colors.blue,   \"Eat\"),\r\n        new ColorLabel(colors.purple, \"Sleep\"),\r\n        new ColorLabel(colors.green,  \"Entertainment\"),\r\n      ],\r\n      mainColorLabel: startingColorLabel,\r\n    }\r\n    this.painting = false;\r\n  }\r\n\r\n  onMouseEnter(i, event) {\r\n    // Can probably short-circuit if the Square clicked is the same color.\r\n    // Is implemented by shouldComponentUpdate(nextProps, nextState) in React.Component (in Square)\r\n    /*if(this.state.grid[i] === this.state.mainColorLabel){\r\n      return;\r\n    }*/\r\n    if(!this.painting) {\r\n      return;\r\n    }\r\n    if(event.buttons === 0) {\r\n      this.painting = false;\r\n      return;\r\n    }\r\n    const grid = this.state.grid;\r\n\r\n    if(event.buttons === 2) {\r\n      grid[i] = null;\r\n    } else {\r\n      grid[i] = this.state.mainColorLabel;\r\n    }\r\n    this.setState({\r\n      grid: grid\r\n    });\r\n  }\r\n  onMouseDown(i, event) {\r\n    if(event.button === 1) {\r\n      return;\r\n    }\r\n\r\n    if(event.button === 2) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    this.painting = true;\r\n\r\n    const grid = this.state.grid;\r\n\r\n    if(event.button === 2) {\r\n      grid[i] = null;\r\n    }\r\n    else {\r\n      grid[i] = this.state.mainColorLabel;\r\n    }\r\n    this.setState({\r\n      grid: grid\r\n    });\r\n  }\r\n  onMouseUp() {\r\n    this.painting = false;\r\n  }\r\n  onClick(colorlabel) {\r\n    this.setState({mainColorLabel: colorlabel});\r\n  }\r\n  onContextMenu(i, event) {\r\n    event.preventDefault();\r\n\r\n    this.painting = true;\r\n\r\n    const grid = this.state.grid;\r\n\r\n    grid[i] = null;\r\n    this.setState({\r\n      grid: grid\r\n    });\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"App\">\r\n        <Grid\r\n          grid={this.state.grid}\r\n          onMouseEnter={(i, event) => this.onMouseEnter(i, event)}\r\n          onMouseDown={(i, event) => this.onMouseDown(i, event)}\r\n          onMouseUp={() => this.onMouseUp()}\r\n        />\r\n        <ColorMenu\r\n          colorList={this.state.colorList}\r\n          onClick={(colorlabel) => this.onClick(colorlabel)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}